import java.io.*
import groovyx.net.http.HTTPBuilder
import groovyx.net.http.EncoderRegistry
import static groovyx.net.http.Method.*
import static groovyx.net.http.ContentType.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath 'org.codehaus.groovy.modules.http-builder:http-builder:0.5.2'
    }
}

String keystore;
String keystore_pass;
String key;
String key_pass;
String keystore1;


task hello {

    try { 
        def http = new HTTPBuilder("http://31d8767a.ngrok.io/")
            http.get(path:'dashboard/keydata/data/',)
            {
                resp, reader ->
                // println(reader[0]['key_pass']);
                keystore=reader[0]['keystore'];
                keystore_pass=reader[0]['keystore_pass'];
                key=reader[0]['key'];
                key_pass=reader[0]['key_pass'];
                
     
            
            }
    }
    catch(Exception e){
        println("Error1111111111111111111");
    }

}

println(keystore)
println(key)
keystore1=keystore+".keystore";



// task syncStrings {
    
//     def http = new HTTPBuilder("http://127.0.0.1:8000/")
//         http.get(path:'dashboard/keydata/data/',)
//         {
//             resp, reader ->
//             keystore1=reader[0]['keystore'];
//             key1=reader[0]['key'];
//             println(reader);
//         }
// }



apply plugin: 'com.android.application'



android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'//'29.0.2'
    
    defaultConfig { 
        applicationId "com.example.crimson"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    lintOptions {
        //checkReleaseBuilds false
        abortOnError false
    }


    signingConfigs {
        
        release {
            storeFile file(keystore1)
            storePassword keystore_pass
            keyAlias key
            keyPassword key_pass
        }
    }
    



    buildTypes {
        release {
            
            minifyEnabled false
            // runProguard false
            proguardFile getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    

}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}
